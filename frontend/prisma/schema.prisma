generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  state      String
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  oauth      oauth[]
  profile    profile[]
  session    session[]
}

model oauth {
  id            Int      @id @default(autoincrement())
  identity      String
  token         String
  refresh_token String?
  provider      String
  account_id    Int
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  account       account  @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([identity, provider])
  @@index([account_id], map: "idx_oauth_account_id")
}

model profile {
  id           Int       @id @default(autoincrement())
  first_name   String?
  last_name    String?
  country_code String?   @db.VarChar(2)
  address      String?
  avatar       String?
  account_id   Int
  updated_at   DateTime? @db.Timestamptz(6)
  created_at   DateTime  @default(now()) @db.Timestamptz(6)
  account      account   @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([account_id], map: "idx_profile_account_id")
}

model schema_migrations {
  version String @id @db.VarChar(128)
}

model session {
  id           Int            @id @default(autoincrement())
  session_id   String         @unique
  account_id   Int
  expire_at    DateTime       @db.Timestamptz(6)
  created_at   DateTime       @default(now()) @db.Timestamptz(6)
  account      account        @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  verification verification[]

  @@index([account_id], map: "idx_session_account_id")
}

model verification {
  id         Int      @id @default(autoincrement())
  email      String?
  code       String   @unique
  session_id Int?
  kind       Int
  created_at DateTime @default(now()) @db.Timestamptz(6)
  session    session? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([session_id], map: "idx_verification_session_id")
  @@index([email], map: "idx_verification_email")
}
